# vim: foldmethod=marker

set -g prefix C-a
bind C-a send-prefix

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#I-#P.log" \; display "Toggled logging to ~/#I-#P.log"

# Behaviour {{{
set -g default-terminal "tmux-256color"
#set -g default-terminal "screen-256color"

setw -q -g utf8 on
set -g set-titles on
setw -g alternate-screen on

set -g history-limit 40000

setw -g xterm-keys on
setw -g mode-keys vi
set -g mouse on

# wait only 20ms after ESC key (fix slow ESC recognition in vim)
set -sg escape-time 20
# }}}

# Status line {{{
set -g status-justify centre

set -g status-interval 60
set -g status-bg black
set -g status-fg white

set -g status-right '#[fg=green]][ #[fg=brightblue]%Y/%m/%d#[default] #[fg=white]%H:%M#[default] #[fg=green]]'
set -g status-left-length 40
set -g status-left '#[fg=green][#[fg=default] #H : #S #[fg=green]]['

set -g window-status-format "#I#F #W"
set -g window-status-current-format "#[fg=red](#[fg=default,bold]#I#F#{?pane_synchronized,S,} #W#[fg=red,nobold])#[fg=default]"
# }}}

# Panel {{{
setw -g pane-base-index 1

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind -r c-h resize-pane -L
bind -r c-j resize-pane -D
bind -r c-k resize-pane -U
bind -r c-l resize-pane -R

#bind > swap-pane -D
#bind < swap-pane -U
# }}}

# Window {{{
set -g base-index 1
set -g renumber-windows on
setw -g aggressive-resize on

# Switch to previous window
bind a last-window

bind c new-window -c "#{pane_current_path}"

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Toggle synchronize-panels
bind C-s set-window-option synchronize-panes

bind -r H select-window -t :-
bind -r L select-window -t :+

bind -r p select-window -t :-
bind -r n select-window -t :+
# }}}

# Copy-paste {{{
bind Escape copy-mode

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel

bind-key C-y run-shell "tmux save-buffer - | xclip -i > /dev/null" \; display-message "Copied tmux buffer to selection"
bind-key C-Y run-shell "tmux save-buffer - | xclip -i -selection clipboard > /dev/null" \; display-message "Copied tmux buffer to clipboard"
bind-key C-p run-shell "xclip -o | tmux load-buffer - ; tmux paste-buffer"
# }}}

# External app compatibility {{{

# Enable mouse scroll in legacy apps
tmux_commands_with_legacy_scroll="nano less man git bat"
bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Up Up Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Down Down Down" "send -Mt="'
# }}}

